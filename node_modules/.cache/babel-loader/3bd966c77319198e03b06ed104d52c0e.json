{"ast":null,"code":"var _jsxFileName = \"/Users/saksham/Desktop/my website/client/src/components/Modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useCallback } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport \"./Modal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Modal = _ref => {\n  _s();\n\n  let {\n    showModal,\n    setShowModal\n  } = _ref;\n  const modalRef = useRef();\n  const animation = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: showModal ? 1 : 0,\n    transform: showModal ? `translateY(0%)` : `translateY(-100%)`\n  });\n\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setShowModal(false);\n    }\n  };\n\n  const keyPress = useCallback(e => {\n    if (e.key === \"Escape\" && showModal) {\n      setShowModal(false);\n      console.log(\"I pressed\");\n    }\n  }, [setShowModal, showModal]);\n  useEffect(() => {\n    document.addEventListener(\"keydown\", keyPress);\n    return () => document.removeEventListener(\"keydown\", keyPress);\n  }, [keyPress]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showModal ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Background\",\n      onClick: closeModal,\n      ref: modalRef,\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        style: animation,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ModalWrapper\",\n          showModal: showModal,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Icon\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"ModalImg\",\n              src: require(\"./certificateImg.jpg\").default,\n              alt: \"camera\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"CloseModalButton\",\n              \"aria-label\": \"Close modal\",\n              onClick: () => setShowModal(prev => !prev),\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-times\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n};\n\n_s(Modal, \"v+8xQfdHkWl7ocSyEt0s8KDGwZY=\", false, function () {\n  return [useSpring];\n});\n\n_c = Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/Users/saksham/Desktop/my website/client/src/components/Modal.js"],"names":["React","useRef","useEffect","useCallback","useSpring","animated","Modal","showModal","setShowModal","modalRef","animation","config","duration","opacity","transform","closeModal","e","current","target","keyPress","key","console","log","document","addEventListener","removeEventListener","require","default","prev"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;AAEA,OAAO,aAAP;;;AAEA,OAAO,MAAMC,KAAK,GAAG,QAAiC;AAAA;;AAAA,MAAhC;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAAgC;AACpD,QAAMC,QAAQ,GAAGR,MAAM,EAAvB;AAEA,QAAMS,SAAS,GAAGN,SAAS,CAAC;AAC1BO,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADkB;AAI1BC,IAAAA,OAAO,EAAEN,SAAS,GAAG,CAAH,GAAO,CAJC;AAK1BO,IAAAA,SAAS,EAAEP,SAAS,GAAI,gBAAJ,GAAuB;AALjB,GAAD,CAA3B;;AAQA,QAAMQ,UAAU,GAAIC,CAAD,IAAO;AACxB,QAAIP,QAAQ,CAACQ,OAAT,KAAqBD,CAAC,CAACE,MAA3B,EAAmC;AACjCV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,GAJD;;AAMA,QAAMW,QAAQ,GAAGhB,WAAW,CACzBa,CAAD,IAAO;AACL,QAAIA,CAAC,CAACI,GAAF,KAAU,QAAV,IAAsBb,SAA1B,EAAqC;AACnCC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;AACF,GANyB,EAO1B,CAACd,YAAD,EAAeD,SAAf,CAP0B,CAA5B;AAUAL,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCL,QAArC;AACA,WAAO,MAAMI,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCN,QAAxC,CAAb;AACD,GAHQ,EAGN,CAACA,QAAD,CAHM,CAAT;AAKA,sBACE;AAAA,cACGZ,SAAS,gBACR;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,OAAO,EAAEQ,UAArC;AAAiD,MAAA,GAAG,EAAEN,QAAtD;AAAA,6BACE,QAAC,QAAD,CAAU,GAAV;AAAc,QAAA,KAAK,EAAEC,SAArB;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAA8B,UAAA,SAAS,EAAEH,SAAzC;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACE;AACE,cAAA,SAAS,EAAC,UADZ;AAEE,cAAA,GAAG,EAAEmB,OAAO,CAAC,sBAAD,CAAP,CAAgCC,OAFvC;AAGE,cAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE;AACE,cAAA,SAAS,EAAC,kBADZ;AAEE,4BAAW,aAFb;AAGE,cAAA,OAAO,EAAE,MAAMnB,YAAY,CAAEoB,IAAD,IAAU,CAACA,IAAZ,CAH7B;AAAA,qCAKE;AAAG,gBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADQ,GAsBN;AAvBN,mBADF;AA2BD,CA3DM;;GAAMtB,K;UAGOF,S;;;KAHPE,K","sourcesContent":["import React, { useRef, useEffect, useCallback } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\n\nimport \"./Modal.css\";\n\nexport const Modal = ({ showModal, setShowModal }) => {\n  const modalRef = useRef();\n\n  const animation = useSpring({\n    config: {\n      duration: 250,\n    },\n    opacity: showModal ? 1 : 0,\n    transform: showModal ? `translateY(0%)` : `translateY(-100%)`,\n  });\n\n  const closeModal = (e) => {\n    if (modalRef.current === e.target) {\n      setShowModal(false);\n    }\n  };\n\n  const keyPress = useCallback(\n    (e) => {\n      if (e.key === \"Escape\" && showModal) {\n        setShowModal(false);\n        console.log(\"I pressed\");\n      }\n    },\n    [setShowModal, showModal]\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", keyPress);\n    return () => document.removeEventListener(\"keydown\", keyPress);\n  }, [keyPress]);\n\n  return (\n    <>\n      {showModal ? (\n        <div className=\"Background\" onClick={closeModal} ref={modalRef}>\n          <animated.div style={animation}>\n            <div className=\"ModalWrapper\" showModal={showModal}>\n              <div className=\"Icon\">\n                <img\n                  className=\"ModalImg\"\n                  src={require(\"./certificateImg.jpg\").default}\n                  alt=\"camera\"\n                />\n\n                <button\n                  className=\"CloseModalButton\"\n                  aria-label=\"Close modal\"\n                  onClick={() => setShowModal((prev) => !prev)}\n                >\n                  <i className=\"fa fa-times\"></i>\n                </button>\n              </div>\n            </div>\n          </animated.div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}